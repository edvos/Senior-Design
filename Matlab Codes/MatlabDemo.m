clc

summary(type)
he1 = [];
he1_time = [];
he2 = [];
he2_time = [];
dist = [];
dist_time = [];

time = [];

for i = 1:length(type)
    time = [time, hour(i)*3600 + min(i)*60+sec(i)];
end
for i = 1:length(type)
    if (type(i) == 'HE1')
        he1 = [he1, value(i)];
        he1_time = [he1_time, time(i)];
    elseif (type(i) == 'HE2')
        he2 = [he2, value(i)];
        he2_time = [he2_time, time(i)];
    else
        dist = [dist, value(i)];
        dist_time = [dist_time, time(i)];
    end
end

createfigure(he1_time, he1, he2_time, he2)

function createfigure(X1, Y1, X2, Y2)
%CREATEFIGURE(X1, Y1, X2, Y2)
%  X1:  vector of x data
%  Y1:  vector of y data
%  X2:  vector of x data
%  Y2:  vector of y data

%  Auto-generated by MATLAB on 17-Feb-2020 15:49:49

% Create figure
figure1 = figure('WindowState','maximized');

% Create axes
axes1 = axes('Parent',figure1);
hold(axes1,'on');

% Create plot
plot(X1,Y1,'DisplayName','Secondary RPM','Marker','.','LineStyle','none');

% Create plot
plot1 = plot(X2,Y2,'DisplayName','Primary RPM','Marker','.',...
    'LineStyle','none');

% The following line demonstrates an alternative way to create a data tip.
% datatip(plot1,55769.261507,2664.31888200731);
% Create datatip
datatip(plot1,'DataIndex',436);

% Create ylabel
ylabel('RPM');

% Create xlabel
xlabel('Time (s)');

% Create title
title('RPM of Primary vs Secondary');

% Uncomment the following line to preserve the X-limits of the axes
% xlim(axes1,[55755 55795]);
% Uncomment the following line to preserve the Y-limits of the axes
% ylim(axes1,[0 12000]);
box(axes1,'on');
% Create legend
legend(axes1,'show');

end
    
